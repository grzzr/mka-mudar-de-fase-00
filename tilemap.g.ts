// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tileGrass1,sprites.castle.tileGrass3], TileScale.Sixteen);
            case "level2":
            case "level2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16,sprites.castle.tileDarkGrass3], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex`1000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "level5":
            case "level5":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [myTiles.transparency16], TileScale.Sixteen);
            case "masmorra":
            case "level6":return tiles.createTilemap(hex`10001000060707070e07070707071207070707080d0101010101010101010101020101090d02020201010101010101010102010f0d0201020101020202020201010401090d020402010102010101020101010209111301010101030101010201010101090d0101010101020101010201010101090d0205020101020402040201010101090d010101020101010101010101071208110101010401010101010101010101090d01010102010101010202020101010f110101010401010101020103010101090d0101010201010101020202010101090d0402020101010101010101010102090d0101010101010101010101020201090c100b0b0b0b0b0b0b100b0b0b0b0b0a`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . 2 . . 2 
2 2 2 2 . . . . . . . . . 2 . 2 
2 2 . 2 . . 2 2 2 2 2 . . 2 . 2 
2 2 2 2 . . 2 . . . 2 . . . 2 2 
2 . . . . . 2 . . . 2 . . . . 2 
2 . . . . . 2 . . . 2 . . . . 2 
2 2 2 2 . . 2 2 2 2 2 . . . . 2 
2 . . . 2 . . . . . . . . 2 2 2 
2 . . . 2 . . . . . . . . . . 2 
2 . . . 2 . . . . 2 2 2 . . . 2 
2 . . . 2 . . . . 2 . 2 . . . 2 
2 . . . 2 . . . . 2 2 2 . . . 2 
2 2 2 2 . . . . . . . . . . 2 2 
2 . . . . . . . . . . . 2 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.darkGroundCenter,sprites.dungeon.floorLight0,sprites.dungeon.floorLightMoss,sprites.dungeon.floorLight4,sprites.dungeon.floorLight3,sprites.dungeon.greenOuterNorthWest,sprites.dungeon.greenOuterNorth0,sprites.dungeon.greenOuterNorthEast,sprites.dungeon.greenOuterEast0,sprites.dungeon.greenOuterSouthWest,sprites.dungeon.greenOuterSouth0,sprites.dungeon.greenOuterSouthEast,sprites.dungeon.greenOuterWest1,sprites.dungeon.greenOuterNorth2,sprites.dungeon.greenOuterEast2,sprites.dungeon.greenOuterSouth2,sprites.dungeon.greenOuterWest2,sprites.dungeon.greenSwitchUp,sprites.dungeon.collectibleInsignia], TileScale.Sixteen);
            case "floresta1":
            case "level4":return tiles.createTilemap(hex`10001000040404040402020202020202020202020d010d0d0d0a020202020202020202020d0c0d0d0d08040402020204040404040505060e0c0d0d0d0802070d0d0d010d0202070d0d0d0d010d08090d0d0d0d0d020202050505060d0d0d0d0d0d0b0d0d020202040404090d0d0d0d0d0d0b0d0d0202090d0d0d0d0d0c010d0d0b0d0d0c02070d0d010d0d0d0d0d0b0b0d0d010d02090d0d0d0b0b0b0b0b0b0d0d0c0305070d0c0d0b0b0b0b0b0b0d0d0d0d0a02090d0d0d0b0b0b0b0d0d0d0d030502020d0c0d0d0b0b0b0d0d010d03020202020c010d0c0b0b0b0b0c02020a020202020d0d0d0b0b0b0b0b02040208020202020b0b0b0b0b0b0b0b090f08040a020202`, img`
2 2 2 2 2 . . . . . . . . . . . 
. . . . . 2 . . . . . . . . . . 
. . . . . 2 2 2 . . 2 2 2 2 2 2 
2 2 2 . . . . . 2 . 2 . . . . . 
. . 2 . . . . . . 2 2 . . . . . 
. . . 2 2 2 2 . . . . . . 2 . . 
. . . 2 2 2 2 . . . . . . 2 . . 
. . 2 . . . . . . . . . 2 . . . 
. 2 . . . . . . . . 2 2 . . . . 
. 2 . . . 2 2 2 2 2 2 . . . 2 2 
2 . . . 2 2 2 2 2 2 . . . . 2 2 
2 . . . 2 2 2 2 . . . . 2 2 . . 
. . . . 2 2 2 . . . . 2 2 . . . 
. . . . 2 2 2 2 . . . 2 . . . . 
. . . 2 2 2 2 2 . . . 2 2 . . . 
2 2 2 2 2 2 2 2 . . . . 2 . . . 
`, [myTiles.transparency16,sprites.castle.tileGrass2,sprites.castle.tilePath5,sprites.castle.tilePath1,sprites.castle.tilePath8,sprites.castle.tilePath2,sprites.castle.tilePath3,sprites.castle.tilePath6,sprites.castle.tilePath7,sprites.castle.tilePath9,sprites.castle.tilePath4,sprites.builtin.forestTiles0,sprites.castle.tileGrass3,sprites.castle.tileGrass1,sprites.dungeon.collectibleInsignia,sprites.dungeon.doorClosedNorth], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
